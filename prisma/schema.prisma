generator kysely {
  provider        = "prisma-kysely"
  output          = "../src/lib/db"
  previewFeatures = ["multiSchema", "views"]
  fileName        = "schema.d.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

model EvaluationNarratives {
  id               Int     @id
  course_id        Int
  comment          String
  comment_compound Float
  course           Courses @relation(fields: [course_id], references: [course_id])

  @@schema("public")
}

model Courses {
  all_course_codes                 Json?
  areas                            Json?
  average_gut_rating               Float?
  average_professor                Float?
  average_rating                   Float?
  average_workload                 Float?
  average_rating_same_professors   Float?
  average_workload_same_professors Float?
  classnotes                       String?
  course_code                      String?
  course_id                        Int                    @id
  credits                          Float?
  // crn                              Int?
  description                      String?
  // enrolled                         Int?
  // extra_info                       String?
  final_exam                       String?
  flag_info                        Json?
  // fysem                            Boolean?
  last_enrollment                  Int?
  last_enrollment_same_professors  Boolean?
  // listing_id                       Int
  locations_summary                String?
  number                           String?
  // professor_ids                    Json?
  professor_names                  Json?
  regnotes                         String?
  requirements                     String?
  // rp_attr                          String?
  same_course_id                   Int?
  // same_course_and_profs_id         Int?
  // last_offered_course_id           Int?
  school                           String?
  season_code                      String?
  section                          String?
  skills                           Json?
  // subject                          String?
  // syllabus_url                     String?
  // times_by_day                     Json?
  times_summary                    String?
  title                            String?
  EvaluationNarratives             EvaluationNarratives[]
  UserCourse                       UserCourse[]

  @@schema("public")
}

model users {
  instance_id                 String?       @db.Uuid
  id                          String        @id @db.Uuid
  aud                         String?       @db.VarChar(255)
  role                        String?       @db.VarChar(255)
  email                       String?       @unique @db.VarChar(255)
  encrypted_password          String?       @db.VarChar(255)
  email_confirmed_at          DateTime?     @db.Timestamptz(6)
  invited_at                  DateTime?     @db.Timestamptz(6)
  confirmation_token          String?       @db.VarChar(255)
  confirmation_sent_at        DateTime?     @db.Timestamptz(6)
  recovery_token              String?       @db.VarChar(255)
  recovery_sent_at            DateTime?     @db.Timestamptz(6)
  email_change_token_new      String?       @db.VarChar(255)
  email_change                String?       @db.VarChar(255)
  email_change_sent_at        DateTime?     @db.Timestamptz(6)
  last_sign_in_at             DateTime?     @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?     @db.Timestamptz(6)
  updated_at                  DateTime?     @db.Timestamptz(6)
  phone                       String?       @unique
  phone_confirmed_at          DateTime?     @db.Timestamptz(6)
  phone_change                String?       @default("")
  phone_change_token          String?       @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?     @db.Timestamptz(6)
  confirmed_at                DateTime?     @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?       @default("") @db.VarChar(255)
  email_change_confirm_status Int?          @default(0) @db.SmallInt
  banned_until                DateTime?     @db.Timestamptz(6)
  reauthentication_token      String?       @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?     @db.Timestamptz(6)
  is_sso_user                 Boolean       @default(false)
  deleted_at                  DateTime?     @db.Timestamptz(6)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  sessions                    sessions[]
  UserCourse                  UserCourse[]

  @@index([instance_id])
  @@schema("auth")
}

model UserCourse {
  id        Int     @id @default(autoincrement())
  userEmail String  @db.VarChar(255)
  courseId  Int
  course    Courses @relation(fields: [courseId], references: [course_id])
  user      users   @relation(fields: [userEmail], references: [email])

  @@schema("public")
}

model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)

  @@index([auth_code], map: "idx_auth_code")
  @@schema("auth")
}

model identities {
  id              String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([provider, id])
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@schema("auth")
}

model mfa_factors {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  friendly_name  String?
  factor_type    factor_type
  status         factor_status
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  secret         String?
  mfa_challenges mfa_challenges[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@schema("auth")
}

model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([token])
  @@schema("auth")
}

model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  from_ip_address String?       @db.Inet
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view Courses_3_Decimals {
  course_id                        Int?
  all_course_codes                 Json?
  areas                            Json?
  average_gut_rating               Decimal? @db.Decimal(10, 3)
  average_professor                Decimal? @db.Decimal(10, 3)
  average_rating                   Decimal? @db.Decimal(10, 3)
  average_workload                 Decimal? @db.Decimal(10, 3)
  average_rating_same_professors   Decimal? @db.Decimal(10, 3)
  average_workload_same_professors Decimal? @db.Decimal(10, 3)
  classnotes                       String?
  course_code                      String?
  credits                          Decimal? @db.Decimal(10, 3)
  crn                              Int?
  description                      String?
  enrolled                         Int?
  extra_info                       String?
  final_exam                       String?
  flag_info                        Json?
  fysem                            Boolean?
  last_enrollment                  Int?
  last_enrollment_same_professors  Boolean?
  listing_id                       Int?
  locations_summary                String?
  number                           String?
  professor_ids                    Json?
  professor_names                  Json?
  regnotes                         String?
  requirements                     String?
  rp_attr                          String?
  same_course_id                   Int?
  same_course_and_profs_id         Int?
  last_offered_course_id           Int?
  school                           String?
  season_code                      String?
  section                          String?
  skills                           Json?
  subject                          String?
  syllabus_url                     String?
  times_by_day                     Json?
  times_summary                    String?
  title                            String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view EvaluationNarrativesToCourses {
  id                               Int?
  comment                          String?
  comment_compound                 Float?
  all_course_codes                 Json?
  areas                            Json?
  average_gut_rating               Float?
  average_professor                Float?
  average_rating                   Float?
  average_workload                 Float?
  average_rating_same_professors   Float?
  average_workload_same_professors Float?
  classnotes                       String?
  course_code                      String?
  credits                          Float?
  crn                              Int?
  description                      String?
  enrolled                         Int?
  extra_info                       String?
  final_exam                       String?
  flag_info                        Json?
  fysem                            Boolean?
  last_enrollment                  Int?
  last_enrollment_same_professors  Boolean?
  listing_id                       Int?
  locations_summary                String?
  number                           String?
  professor_ids                    Json?
  professor_names                  Json?
  regnotes                         String?
  requirements                     String?
  rp_attr                          String?
  same_course_id                   Int?
  same_course_and_profs_id         Int?
  last_offered_course_id           Int?
  school                           String?
  season_code                      String?
  section                          String?
  skills                           Json?
  subject                          String?
  syllabus_url                     String?
  times_by_day                     Json?
  times_summary                    String?
  title                            String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view EvaluationNarrativesToCourses202303 {
  all_course_codes Json?
  title            String?
  comment          String?
  comment_compound Float?
  areas            Json?
  skills           Json?

  @@ignore
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn

  @@schema("auth")
}
